-- Order Management
-- Q1 - Q6
-- 1 
SELECT 
	PRODUCT_CLASS_CODE, 
	PRODUCT_ID, 
	PRODUCT_DESC,
	CASE PRODUCT_CLASS_CODE
		WHEN 2050
			THEN PRODUCT_PRICE + 2000
		WHEN 2051
			THEN PRODUCT_PRICE + 500
		WHEN 2052
			THEN PRODUCT_PRICE + 600
		ELSE
			PRODUCT_PRICE
		END PRODUCT_PRICE
FROM PRODUCT 
ORDER BY PRODUCT_CLASS_CODE DESC;



-- 2
SELECT 
	PRODUCT_CLASS_DESC, 
	PRODUCT_ID, 
	PRODUCT_DESC, 
	PRODUCT_QUANTITY_AVAIL,
	CASE 
		WHEN PRODUCT_QUANTITY_AVAIL = 0 THEN 'OUT OF STOCK'
	ELSE
		CASE PRODUCT_CLASS_DESC
			WHEN 'Electronics' OR 'Computer' THEN 
				CASE 
					WHEN PRODUCT_QUANTITY_AVAIL <=10 THEN 'LOW STOCK'
					WHEN PRODUCT_QUANTITY_AVAIL >=11 AND PRODUCT_QUANTITY_AVAIL <= 30 THEN 'IN STOCK'
					WHEN PRODUCT_QUANTITY_AVAIL >= 31 THEN 'ENOUGH STOCK'
					ELSE 'ENOUGH STOCK'
					END
			WHEN 'Stationery' OR 'Clothes' THEN 
				CASE 
					WHEN PRODUCT_QUANTITY_AVAIL < 20 THEN 'LOW STOCK'
					WHEN PRODUCT_QUANTITY_AVAIL >= 21 AND PRODUCT_QUANTITY_AVAIL <= 80 THEN 'IN STOCK'
					ELSE 'ENOUGH STOCK'
					END 
			ELSE 
				CASE
					WHEN PRODUCT_QUANTITY_AVAIL <= 15 THEN 'LOW STOCK'
					WHEN PRODUCT_QUANTITY_AVAIL >= 16 AND PRODUCT_QUANTITY_AVAIL <= 50 THEN 'IN STOCK'
					ELSE 'ENOUGH STOCK'
					END
			END
	END INVENTORY_STATUS
FROM PRODUCT 
	INNER JOIN PRODUCT_CLASS ON PRODUCT.PRODUCT_CLASS_CODE = PRODUCT_CLASS.PRODUCT_CLASS_CODE;
	